{"remainingRequest":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/node_modules/babel-loader/lib/index.js!/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/node_modules/eslint-loader/index.js??ref--13-0!/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/src/tools/tool/brush.js","dependencies":[{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/src/tools/tool/brush.js","mtime":1558236212000},{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport paper from 'paper';\nimport store from \"../../store/store\";\nimport { createLayer } from \"../shared\";\nimport history from \"../history\";\nimport { DrawAction } from \"../action\";\nvar local = {\n  path: null\n};\n\nfunction onMouseDown() {\n  var layer = createLayer();\n  local.path = new paper.Path();\n  var rgb = hexToRgb(store.getters.toolArgs.color || '#000000');\n  local.path.fillColor = \"rgba(\".concat(rgb.r, \",\").concat(rgb.g, \",\").concat(rgb.b, \",0.4)\");\n  layer.addChild(local.path);\n}\n\nfunction onMouseDrag(event) {\n  if (!local.path) return;\n  var step = event.delta;\n  step.x *= store.getters.toolArgs.size / 2.8;\n  step.y *= store.getters.toolArgs.size / 2.8;\n  step.angle += 90;\n  var top = event.middlePoint.add(step);\n  var bottom = event.middlePoint.subtract(step);\n  local.path.selected = true;\n  local.path.add(top);\n  local.path.insert(0, bottom);\n}\n\nfunction onMouseUp() {\n  local.path.simplify();\n  var action = new DrawAction({\n    layer: local.path.layer.name,\n    tool: store.getters.tool,\n    points: local.path.segments.map(function (seg) {\n      return {\n        x: seg._point._x,\n        y: seg._point._y\n      };\n    })\n  });\n  history.add(action);\n  local.path.selected = false;\n  local.path = null;\n}\n\nexport var tool = new paper.Tool();\ntool.minDistance = 7;\ntool.maxDistance = 7;\ntool.onMouseDown = onMouseDown;\ntool.onMouseDrag = onMouseDrag;\ntool.onMouseUp = onMouseUp;\n\nfunction hexToRgb(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}",{"version":3,"sources":["/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/src/tools/tool/brush.js"],"names":["paper","store","createLayer","history","DrawAction","local","path","onMouseDown","layer","Path","rgb","hexToRgb","getters","toolArgs","color","fillColor","r","g","b","addChild","onMouseDrag","event","step","delta","x","size","y","angle","top","middlePoint","add","bottom","subtract","selected","insert","onMouseUp","simplify","action","name","tool","points","segments","map","seg","_point","_x","_y","Tool","minDistance","maxDistance","hex","result","exec","parseInt"],"mappings":"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","sourcesContent":["import paper from 'paper';\nimport store from '../../store/store';\nimport { createLayer } from '../shared';\nimport history from '../history';\nimport { DrawAction } from '../action'\n\nlet local = {\n    path: null\n}\n\nfunction onMouseDown() {\n    let layer = createLayer();\n    local.path = new paper.Path();\n    let rgb = hexToRgb(store.getters.toolArgs.color || '#000000');\n    local.path.fillColor = `rgba(${rgb.r},${rgb.g},${rgb.b},0.4)`;\n    layer.addChild(local.path);\n}\n\nfunction onMouseDrag(event) {\n    if (!local.path) return;\n    var step = event.delta;\n    step.x *= store.getters.toolArgs.size / 2.8;\n    step.y *= store.getters.toolArgs.size / 2.8;\n    step.angle += 90;\n\n    var top = event.middlePoint.add(step);\n    var bottom = event.middlePoint.subtract(step);\n    local.path.selected = true;\n    local.path.add(top);\n    local.path.insert(0, bottom);\n}\n\n\nfunction onMouseUp() {\n    local.path.simplify();\n    const action = new DrawAction({\n        layer: local.path.layer.name,\n        tool: store.getters.tool,\n        points: local.path.segments.map(seg => {\n            return {\n                x: seg._point._x,\n                y: seg._point._y\n            }\n        })\n    });\n    history.add(action);\n    local.path.selected = false;\n    local.path = null;\n}\n\nexport const tool = new paper.Tool();\ntool.minDistance = 7;\ntool.maxDistance = 7;\ntool.onMouseDown = onMouseDown;\ntool.onMouseDrag = onMouseDrag;\ntool.onMouseUp = onMouseUp;\n\nfunction hexToRgb(hex) {\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : null;\n}\n"]}]}