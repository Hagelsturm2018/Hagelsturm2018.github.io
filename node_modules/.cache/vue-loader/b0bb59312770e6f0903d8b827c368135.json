{"remainingRequest":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/src/components/panel/MainPanel.vue?vue&type=template&id=0c546900&","dependencies":[{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/src/components/panel/MainPanel.vue","mtime":1558236212000},{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/Whiteboard-2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"mainPanel\" }, [\n    _c(\n      \"div\",\n      { staticClass: \"actionsPanel\" },\n      [\n        _c(\"panelToolIcon\", {\n          attrs: {\n            toolColor: _vm.toolColor,\n            isActive: _vm.tool === \"pencil\" || _vm.tool === \"brush\",\n            icon: _vm.activeTool\n          },\n          nativeOn: {\n            click: function($event) {\n              return _vm.toggleToolSettings($event)\n            }\n          }\n        }),\n        _c(\"panelToolIcon\", {\n          attrs: {\n            toolColor: \"#133337\",\n            isActive: _vm.tool === \"eraser\",\n            icon: \"eraser\"\n          },\n          nativeOn: {\n            click: function($event) {\n              _vm.toggleEraserSettings()\n              _vm.setWhiteboardTool(\"eraser\")\n            }\n          }\n        }),\n        _c(\"panelToolIcon\", {\n          attrs: {\n            toolColor: _vm.shapeColor,\n            isActive:\n              _vm.tool === \"circle\" ||\n              _vm.tool === \"square\" ||\n              _vm.tool === \"triangle\" ||\n              _vm.tool === \"line\",\n            icon: _vm.activeShape\n          },\n          nativeOn: {\n            click: function($event) {\n              return _vm.toggleShapeSettings($event)\n            }\n          }\n        })\n      ],\n      1\n    ),\n    _c(\n      \"div\",\n      { staticClass: \"actionSettingsPanel\" },\n      [\n        _vm.isToolSettingsOpened\n          ? _c(\n              \"panelToolSettings\",\n              [\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"settingsActions\",\n                    attrs: { slot: \"settingsActions\" },\n                    slot: \"settingsActions\"\n                  },\n                  [\n                    _c(\"panelToolIcon\", {\n                      attrs: {\n                        toolColor: _vm.toolColor,\n                        isActive: _vm.tool === \"pencil\",\n                        icon: \"pencil-alt\"\n                      },\n                      nativeOn: {\n                        click: function($event) {\n                          return _vm.setWhiteboardTool(\"pencil\")\n                        }\n                      }\n                    }),\n                    _c(\"panelToolIcon\", {\n                      attrs: {\n                        toolColor: _vm.toolColor,\n                        isActive: _vm.tool === \"brush\",\n                        icon: \"paint-brush\"\n                      },\n                      nativeOn: {\n                        click: function($event) {\n                          return _vm.setWhiteboardTool(\"brush\")\n                        }\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\"colorPicker\", {\n                  staticClass: \"settingsColorPicker\",\n                  attrs: {\n                    slot: \"settingsColorPicker\",\n                    onSelectColor: _vm.setToolColor,\n                    colors: _vm.colors\n                  },\n                  slot: \"settingsColorPicker\"\n                }),\n                _c(\"rangeSlider\", {\n                  staticClass: \"settingsSlider\",\n                  attrs: {\n                    slot: \"slider\",\n                    onChange: _vm.setToolSize,\n                    min: 0,\n                    max: 6,\n                    value: _vm.toolSize\n                  },\n                  slot: \"slider\"\n                })\n              ],\n              1\n            )\n          : _vm._e(),\n        _vm.isEraserSettingsOpened\n          ? _c(\n              \"panelToolSettings\",\n              [\n                _c(\"rangeSlider\", {\n                  staticClass: \"settingsSlider\",\n                  attrs: {\n                    slot: \"slider\",\n                    onChange: _vm.setEraserSize,\n                    min: 0,\n                    max: 24,\n                    value: _vm.eraserSize\n                  },\n                  slot: \"slider\"\n                })\n              ],\n              1\n            )\n          : _vm._e(),\n        _vm.isShapeSettingsOpened\n          ? _c(\n              \"panelToolSettings\",\n              [\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"settingsActions\",\n                    attrs: { slot: \"settingsActions\" },\n                    slot: \"settingsActions\"\n                  },\n                  [\n                    _c(\"panelToolIcon\", {\n                      attrs: {\n                        toolColor: _vm.shapeColor,\n                        isActive: _vm.tool === \"circle\",\n                        icon: \"circle\"\n                      },\n                      nativeOn: {\n                        click: function($event) {\n                          return _vm.setWhiteboardTool(\"circle\")\n                        }\n                      }\n                    }),\n                    _c(\"panelToolIcon\", {\n                      attrs: {\n                        toolColor: _vm.shapeColor,\n                        isActive: _vm.tool === \"square\",\n                        icon: \"square\"\n                      },\n                      nativeOn: {\n                        click: function($event) {\n                          return _vm.setWhiteboardTool(\"square\")\n                        }\n                      }\n                    }),\n                    _c(\"panelToolIcon\", {\n                      attrs: {\n                        toolColor: _vm.shapeColor,\n                        isActive: _vm.tool === \"triangle\",\n                        icon: \"exclamation-triangle\"\n                      },\n                      nativeOn: {\n                        click: function($event) {\n                          return _vm.setWhiteboardTool(\"triangle\")\n                        }\n                      }\n                    }),\n                    _c(\"panelToolIcon\", {\n                      attrs: {\n                        toolColor: _vm.shapeColor,\n                        isActive: _vm.tool === \"line\",\n                        icon: \"slash\"\n                      },\n                      nativeOn: {\n                        click: function($event) {\n                          return _vm.setWhiteboardTool(\"line\")\n                        }\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\"colorPicker\", {\n                  staticClass: \"settingsColorPicker\",\n                  attrs: {\n                    slot: \"settingsColorPicker\",\n                    onSelectColor: _vm.setShapeColor,\n                    colors: _vm.colors\n                  },\n                  slot: \"settingsColorPicker\"\n                }),\n                _c(\"rangeSlider\", {\n                  staticClass: \"settingsSlider\",\n                  attrs: {\n                    slot: \"slider\",\n                    onChange: _vm.setShapeSize,\n                    min: 0,\n                    max: 6,\n                    value: _vm.shapeSize\n                  },\n                  slot: \"slider\"\n                })\n              ],\n              1\n            )\n          : _vm._e()\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}